(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
$(document).ready(function() {
  return $('#name').typeahead({
    hint: true,
    highlight: true,
    minLength: 3
  }, {
    name: 'types',
    displayKey: 'value',
    source: function(q, cb) {
      return $.get('/api/typeLookup', {
        query: q
      }, function(data) {
        return cb(data.map(function(x) {
          return {
            id: x[0],
            value: x[1]
          };
        }));
      });
    }
  }).on('typeahead:selected', function(event, data) {
    return $.get("/api/bom/" + data.id, function(data) {
      var g, layout, recur, renderer, svg, svgGroup, xCenterOffset;
      g = new dagreD3.Digraph();
      recur = function(x, visited) {
        var y, _i, _len, _ref, _results;
        if (visited.indexOf(x.id) < 0) {
          visited.push(x.id);
          g.addNode(x.id, {
            label: x.label
          });
          _ref = x.nodes;
          _results = [];
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            y = _ref[_i];
            recur(y, visited);
            _results.push(g.addEdge(null, y.id, x.id));
          }
          return _results;
        }
      };
      recur(data, []);
      svg = d3.select('svg');
      svgGroup = svg.append('g');
      layout = dagreD3.layout().nodeSep(10).rankSep(10).rankDir('RL');
      renderer = new dagreD3.Renderer();
      renderer.zoom(false);
      layout = renderer.layout(layout).run(g, d3.select('svg g'));
      xCenterOffset = (svg.attr('width') - layout.graph().width) / 2;
      svgGroup.attr('transform', "translate(" + xCenterOffset + ", 20)");
      svg.attr('width', layout.graph().width + 40);
      return svg.attr('height', layout.graph().height + 40);
    });
  });
});



},{}]},{},[1])
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9wbWdyZW1vL1Byb2plY3RzL2ludmVudGlvbi9ub2RlX21vZHVsZXMvZ3VscC1icm93c2VyaWZ5L25vZGVfbW9kdWxlcy9icm93c2VyaWZ5L25vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCIvVXNlcnMvcG1ncmVtby9Qcm9qZWN0cy9pbnZlbnRpb24vY2xpZW50L2ludmVudGlvbi9pbnZlbnRpb24uY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FDQUEsQ0FBQSxDQUFFLFFBQUYsQ0FBVyxDQUFDLEtBQVosQ0FBa0IsU0FBQSxHQUFBO1NBQ2hCLENBQUEsQ0FBRSxPQUFGLENBQ0EsQ0FBQyxTQURELENBRUk7QUFBQSxJQUFBLElBQUEsRUFBTSxJQUFOO0FBQUEsSUFDQSxTQUFBLEVBQVcsSUFEWDtBQUFBLElBRUEsU0FBQSxFQUFXLENBRlg7R0FGSixFQU1JO0FBQUEsSUFBQSxJQUFBLEVBQU0sT0FBTjtBQUFBLElBQ0EsVUFBQSxFQUFZLE9BRFo7QUFBQSxJQUVBLE1BQUEsRUFBUSxTQUFDLENBQUQsRUFBSSxFQUFKLEdBQUE7YUFDTixDQUFDLENBQUMsR0FBRixDQUFNLGlCQUFOLEVBQXlCO0FBQUEsUUFBQSxLQUFBLEVBQU8sQ0FBUDtPQUF6QixFQUFtQyxTQUFDLElBQUQsR0FBQTtlQUNqQyxFQUFBLENBQUcsSUFBSSxDQUFDLEdBQUwsQ0FBUyxTQUFDLENBQUQsR0FBQTtpQkFBTztBQUFBLFlBQUEsRUFBQSxFQUFJLENBQUUsQ0FBQSxDQUFBLENBQU47QUFBQSxZQUFVLEtBQUEsRUFBTyxDQUFFLENBQUEsQ0FBQSxDQUFuQjtZQUFQO1FBQUEsQ0FBVCxDQUFILEVBRGlDO01BQUEsQ0FBbkMsRUFETTtJQUFBLENBRlI7R0FOSixDQVdBLENBQUMsRUFYRCxDQVdJLG9CQVhKLEVBVzBCLFNBQUMsS0FBRCxFQUFRLElBQVIsR0FBQTtXQUN4QixDQUFDLENBQUMsR0FBRixDQUFPLFdBQUEsR0FBVyxJQUFJLENBQUMsRUFBdkIsRUFBNkIsU0FBQyxJQUFELEdBQUE7QUFDM0IsVUFBQSx3REFBQTtBQUFBLE1BQUEsQ0FBQSxHQUFRLElBQUEsT0FBTyxDQUFDLE9BQVIsQ0FBQSxDQUFSLENBQUE7QUFBQSxNQUVBLEtBQUEsR0FBUSxTQUFDLENBQUQsRUFBSSxPQUFKLEdBQUE7QUFDTixZQUFBLDJCQUFBO0FBQUEsUUFBQSxJQUFHLE9BQU8sQ0FBQyxPQUFSLENBQWdCLENBQUMsQ0FBQyxFQUFsQixDQUFBLEdBQXdCLENBQTNCO0FBQ0UsVUFBQSxPQUFPLENBQUMsSUFBUixDQUFhLENBQUMsQ0FBQyxFQUFmLENBQUEsQ0FBQTtBQUFBLFVBQ0EsQ0FBQyxDQUFDLE9BQUYsQ0FBVSxDQUFDLENBQUMsRUFBWixFQUFnQjtBQUFBLFlBQUEsS0FBQSxFQUFPLENBQUMsQ0FBQyxLQUFUO1dBQWhCLENBREEsQ0FBQTtBQUVBO0FBQUE7ZUFBQSwyQ0FBQTt5QkFBQTtBQUNFLFlBQUEsS0FBQSxDQUFNLENBQU4sRUFBUyxPQUFULENBQUEsQ0FBQTtBQUFBLDBCQUNBLENBQUMsQ0FBQyxPQUFGLENBQVUsSUFBVixFQUFnQixDQUFDLENBQUMsRUFBbEIsRUFBc0IsQ0FBQyxDQUFDLEVBQXhCLEVBREEsQ0FERjtBQUFBOzBCQUhGO1NBRE07TUFBQSxDQUZSLENBQUE7QUFBQSxNQVNBLEtBQUEsQ0FBTSxJQUFOLEVBQVksRUFBWixDQVRBLENBQUE7QUFBQSxNQVdBLEdBQUEsR0FBTSxFQUFFLENBQUMsTUFBSCxDQUFVLEtBQVYsQ0FYTixDQUFBO0FBQUEsTUFZQSxRQUFBLEdBQVcsR0FBRyxDQUFDLE1BQUosQ0FBVyxHQUFYLENBWlgsQ0FBQTtBQUFBLE1BYUEsTUFBQSxHQUFTLE9BQU8sQ0FBQyxNQUFSLENBQUEsQ0FDUCxDQUFDLE9BRE0sQ0FDRSxFQURGLENBRVAsQ0FBQyxPQUZNLENBRUUsRUFGRixDQUdQLENBQUMsT0FITSxDQUdFLElBSEYsQ0FiVCxDQUFBO0FBQUEsTUFpQkEsUUFBQSxHQUFlLElBQUEsT0FBTyxDQUFDLFFBQVIsQ0FBQSxDQWpCZixDQUFBO0FBQUEsTUFrQkEsUUFBUSxDQUFDLElBQVQsQ0FBYyxLQUFkLENBbEJBLENBQUE7QUFBQSxNQW1CQSxNQUFBLEdBQVMsUUFBUSxDQUFDLE1BQVQsQ0FBZ0IsTUFBaEIsQ0FBdUIsQ0FBQyxHQUF4QixDQUE0QixDQUE1QixFQUErQixFQUFFLENBQUMsTUFBSCxDQUFVLE9BQVYsQ0FBL0IsQ0FuQlQsQ0FBQTtBQUFBLE1BcUJBLGFBQUEsR0FBZ0IsQ0FBQyxHQUFHLENBQUMsSUFBSixDQUFTLE9BQVQsQ0FBQSxHQUFvQixNQUFNLENBQUMsS0FBUCxDQUFBLENBQWMsQ0FBQyxLQUFwQyxDQUFBLEdBQTZDLENBckI3RCxDQUFBO0FBQUEsTUFzQkEsUUFBUSxDQUFDLElBQVQsQ0FBYyxXQUFkLEVBQTRCLFlBQUEsR0FBWSxhQUFaLEdBQTBCLE9BQXRELENBdEJBLENBQUE7QUFBQSxNQXVCQSxHQUFHLENBQUMsSUFBSixDQUFTLE9BQVQsRUFBa0IsTUFBTSxDQUFDLEtBQVAsQ0FBQSxDQUFjLENBQUMsS0FBZixHQUF1QixFQUF6QyxDQXZCQSxDQUFBO2FBd0JBLEdBQUcsQ0FBQyxJQUFKLENBQVMsUUFBVCxFQUFtQixNQUFNLENBQUMsS0FBUCxDQUFBLENBQWMsQ0FBQyxNQUFmLEdBQXdCLEVBQTNDLEVBekIyQjtJQUFBLENBQTdCLEVBRHdCO0VBQUEsQ0FYMUIsRUFEZ0I7QUFBQSxDQUFsQixDQUFBLENBQUEiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiBlKHQsbixyKXtmdW5jdGlvbiBzKG8sdSl7aWYoIW5bb10pe2lmKCF0W29dKXt2YXIgYT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2lmKCF1JiZhKXJldHVybiBhKG8sITApO2lmKGkpcmV0dXJuIGkobywhMCk7dGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitvK1wiJ1wiKX12YXIgZj1uW29dPXtleHBvcnRzOnt9fTt0W29dWzBdLmNhbGwoZi5leHBvcnRzLGZ1bmN0aW9uKGUpe3ZhciBuPXRbb11bMV1bZV07cmV0dXJuIHMobj9uOmUpfSxmLGYuZXhwb3J0cyxlLHQsbixyKX1yZXR1cm4gbltvXS5leHBvcnRzfXZhciBpPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7Zm9yKHZhciBvPTA7bzxyLmxlbmd0aDtvKyspcyhyW29dKTtyZXR1cm4gc30pIiwiJChkb2N1bWVudCkucmVhZHkgLT5cbiAgJCgnI25hbWUnKVxuICAudHlwZWFoZWFkXG4gICAgICBoaW50OiB0cnVlLFxuICAgICAgaGlnaGxpZ2h0OiB0cnVlLFxuICAgICAgbWluTGVuZ3RoOiAzXG4gICAgLFxuICAgICAgbmFtZTogJ3R5cGVzJyxcbiAgICAgIGRpc3BsYXlLZXk6ICd2YWx1ZScsXG4gICAgICBzb3VyY2U6IChxLCBjYikgLT5cbiAgICAgICAgJC5nZXQgJy9hcGkvdHlwZUxvb2t1cCcsIHF1ZXJ5OiBxLCAoZGF0YSkgLT5cbiAgICAgICAgICBjYiBkYXRhLm1hcCAoeCkgLT4gaWQ6IHhbMF0sIHZhbHVlOiB4WzFdXG4gIC5vbiAndHlwZWFoZWFkOnNlbGVjdGVkJywgKGV2ZW50LCBkYXRhKSAtPlxuICAgICQuZ2V0IFwiL2FwaS9ib20vI3tkYXRhLmlkfVwiLCAoZGF0YSkgLT5cbiAgICAgIGcgPSBuZXcgZGFncmVEMy5EaWdyYXBoKClcblxuICAgICAgcmVjdXIgPSAoeCwgdmlzaXRlZCkgLT5cbiAgICAgICAgaWYgdmlzaXRlZC5pbmRleE9mKHguaWQpIDwgMFxuICAgICAgICAgIHZpc2l0ZWQucHVzaCB4LmlkXG4gICAgICAgICAgZy5hZGROb2RlIHguaWQsIGxhYmVsOiB4LmxhYmVsXG4gICAgICAgICAgZm9yIHkgaW4geC5ub2Rlc1xuICAgICAgICAgICAgcmVjdXIgeSwgdmlzaXRlZFxuICAgICAgICAgICAgZy5hZGRFZGdlIG51bGwsIHkuaWQsIHguaWRcbiAgICAgIHJlY3VyIGRhdGEsIFtdXG5cbiAgICAgIHN2ZyA9IGQzLnNlbGVjdCAnc3ZnJ1xuICAgICAgc3ZnR3JvdXAgPSBzdmcuYXBwZW5kICdnJ1xuICAgICAgbGF5b3V0ID0gZGFncmVEMy5sYXlvdXQoKVxuICAgICAgICAubm9kZVNlcCAxMFxuICAgICAgICAucmFua1NlcCAxMFxuICAgICAgICAucmFua0RpciAnUkwnXG4gICAgICByZW5kZXJlciA9IG5ldyBkYWdyZUQzLlJlbmRlcmVyKClcbiAgICAgIHJlbmRlcmVyLnpvb20gZmFsc2VcbiAgICAgIGxheW91dCA9IHJlbmRlcmVyLmxheW91dChsYXlvdXQpLnJ1biBnLCBkMy5zZWxlY3QgJ3N2ZyBnJ1xuXG4gICAgICB4Q2VudGVyT2Zmc2V0ID0gKHN2Zy5hdHRyKCd3aWR0aCcpIC0gbGF5b3V0LmdyYXBoKCkud2lkdGgpIC8gMlxuICAgICAgc3ZnR3JvdXAuYXR0cigndHJhbnNmb3JtJywgXCJ0cmFuc2xhdGUoI3t4Q2VudGVyT2Zmc2V0fSwgMjApXCIpXG4gICAgICBzdmcuYXR0cignd2lkdGgnLCBsYXlvdXQuZ3JhcGgoKS53aWR0aCArIDQwKVxuICAgICAgc3ZnLmF0dHIoJ2hlaWdodCcsIGxheW91dC5ncmFwaCgpLmhlaWdodCArIDQwKVxuIl19
