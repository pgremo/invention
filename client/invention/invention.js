(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
$(document).ready(function() {
  return $('#name').typeahead({
    hint: true,
    highlight: true,
    minLength: 3
  }, {
    name: 'types',
    displayKey: 'value',
    source: function(q, cb) {
      return $.get('/api/typeLookup', {
        query: q
      }, function(data) {
        return cb(data.map(function(x) {
          return {
            id: x[0],
            value: x[1]
          };
        }));
      });
    }
  }).on('typeahead:selected', function(event, data) {
    return $.get("/api/bom/" + data.id, function(data) {
      var g, layout, recur, renderer, svg, svgGroup, xCenterOffset;
      g = new dagreD3.Digraph();
      recur = function(x, visited) {
        var y, _i, _len, _ref, _results;
        if (visited.indexOf(x.id) < 0) {
          visited.push(x.id);
          g.addNode(x.id, {
            label: x.label
          });
          _ref = x.nodes;
          _results = [];
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            y = _ref[_i];
            recur(y, visited);
            _results.push(g.addEdge(null, y.id, x.id));
          }
          return _results;
        }
      };
      recur(data, []);
      svg = d3.select('svg');
      svgGroup = svg.append('g');
      layout = dagreD3.layout().nodeSep(10).edgeSep(10).rankSep(10).rankDir('RL');
      renderer = new dagreD3.Renderer();
      renderer.zoom(false);
      layout = renderer.layout(layout).run(g, d3.select('svg g'));
      xCenterOffset = (svg.attr('width') - layout.graph().width) / 2;
      svgGroup.attr('transform', "translate(" + xCenterOffset + ", 20)");
      svg.attr('width', layout.graph().width + 40);
      return svg.attr('height', layout.graph().height + 40);
    });
  });
});



},{}]},{},[1])
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9wbWdyZW1vL1Byb2plY3RzL2ludmVudGlvbi9ub2RlX21vZHVsZXMvZ3VscC1icm93c2VyaWZ5L25vZGVfbW9kdWxlcy9icm93c2VyaWZ5L25vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCIvVXNlcnMvcG1ncmVtby9Qcm9qZWN0cy9pbnZlbnRpb24vY2xpZW50L2ludmVudGlvbi9pbnZlbnRpb24uY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FDQUEsQ0FBQSxDQUFFLFFBQUYsQ0FBVyxDQUFDLEtBQVosQ0FBa0IsU0FBQSxHQUFBO1NBQ2hCLENBQUEsQ0FBRSxPQUFGLENBQ0EsQ0FBQyxTQURELENBRUk7QUFBQSxJQUFBLElBQUEsRUFBTSxJQUFOO0FBQUEsSUFDQSxTQUFBLEVBQVcsSUFEWDtBQUFBLElBRUEsU0FBQSxFQUFXLENBRlg7R0FGSixFQU1JO0FBQUEsSUFBQSxJQUFBLEVBQU0sT0FBTjtBQUFBLElBQ0EsVUFBQSxFQUFZLE9BRFo7QUFBQSxJQUVBLE1BQUEsRUFBUSxTQUFDLENBQUQsRUFBSSxFQUFKLEdBQUE7YUFDTixDQUFDLENBQUMsR0FBRixDQUFNLGlCQUFOLEVBQXlCO0FBQUEsUUFBQSxLQUFBLEVBQU8sQ0FBUDtPQUF6QixFQUFtQyxTQUFDLElBQUQsR0FBQTtlQUNqQyxFQUFBLENBQUcsSUFBSSxDQUFDLEdBQUwsQ0FBUyxTQUFDLENBQUQsR0FBQTtpQkFBTztBQUFBLFlBQUEsRUFBQSxFQUFJLENBQUUsQ0FBQSxDQUFBLENBQU47QUFBQSxZQUFVLEtBQUEsRUFBTyxDQUFFLENBQUEsQ0FBQSxDQUFuQjtZQUFQO1FBQUEsQ0FBVCxDQUFILEVBRGlDO01BQUEsQ0FBbkMsRUFETTtJQUFBLENBRlI7R0FOSixDQVdBLENBQUMsRUFYRCxDQVdJLG9CQVhKLEVBVzBCLFNBQUMsS0FBRCxFQUFRLElBQVIsR0FBQTtXQUN4QixDQUFDLENBQUMsR0FBRixDQUFPLFdBQUEsR0FBVyxJQUFJLENBQUMsRUFBdkIsRUFBNkIsU0FBQyxJQUFELEdBQUE7QUFDM0IsVUFBQSx3REFBQTtBQUFBLE1BQUEsQ0FBQSxHQUFRLElBQUEsT0FBTyxDQUFDLE9BQVIsQ0FBQSxDQUFSLENBQUE7QUFBQSxNQUVBLEtBQUEsR0FBUSxTQUFDLENBQUQsRUFBSSxPQUFKLEdBQUE7QUFDTixZQUFBLDJCQUFBO0FBQUEsUUFBQSxJQUFHLE9BQU8sQ0FBQyxPQUFSLENBQWdCLENBQUMsQ0FBQyxFQUFsQixDQUFBLEdBQXdCLENBQTNCO0FBQ0UsVUFBQSxPQUFPLENBQUMsSUFBUixDQUFhLENBQUMsQ0FBQyxFQUFmLENBQUEsQ0FBQTtBQUFBLFVBQ0EsQ0FBQyxDQUFDLE9BQUYsQ0FBVSxDQUFDLENBQUMsRUFBWixFQUFnQjtBQUFBLFlBQUEsS0FBQSxFQUFPLENBQUMsQ0FBQyxLQUFUO1dBQWhCLENBREEsQ0FBQTtBQUVBO0FBQUE7ZUFBQSwyQ0FBQTt5QkFBQTtBQUNFLFlBQUEsS0FBQSxDQUFNLENBQU4sRUFBUyxPQUFULENBQUEsQ0FBQTtBQUFBLDBCQUNBLENBQUMsQ0FBQyxPQUFGLENBQVUsSUFBVixFQUFnQixDQUFDLENBQUMsRUFBbEIsRUFBc0IsQ0FBQyxDQUFDLEVBQXhCLEVBREEsQ0FERjtBQUFBOzBCQUhGO1NBRE07TUFBQSxDQUZSLENBQUE7QUFBQSxNQVNBLEtBQUEsQ0FBTSxJQUFOLEVBQVksRUFBWixDQVRBLENBQUE7QUFBQSxNQVdBLEdBQUEsR0FBTSxFQUFFLENBQUMsTUFBSCxDQUFVLEtBQVYsQ0FYTixDQUFBO0FBQUEsTUFZQSxRQUFBLEdBQVcsR0FBRyxDQUFDLE1BQUosQ0FBVyxHQUFYLENBWlgsQ0FBQTtBQUFBLE1BYUEsTUFBQSxHQUFTLE9BQU8sQ0FBQyxNQUFSLENBQUEsQ0FDUCxDQUFDLE9BRE0sQ0FDRSxFQURGLENBRVAsQ0FBQyxPQUZNLENBRUUsRUFGRixDQUdQLENBQUMsT0FITSxDQUdFLEVBSEYsQ0FJUCxDQUFDLE9BSk0sQ0FJRSxJQUpGLENBYlQsQ0FBQTtBQUFBLE1Ba0JBLFFBQUEsR0FBZSxJQUFBLE9BQU8sQ0FBQyxRQUFSLENBQUEsQ0FsQmYsQ0FBQTtBQUFBLE1BbUJBLFFBQVEsQ0FBQyxJQUFULENBQWMsS0FBZCxDQW5CQSxDQUFBO0FBQUEsTUFvQkEsTUFBQSxHQUFTLFFBQVEsQ0FBQyxNQUFULENBQWdCLE1BQWhCLENBQXVCLENBQUMsR0FBeEIsQ0FBNEIsQ0FBNUIsRUFBK0IsRUFBRSxDQUFDLE1BQUgsQ0FBVSxPQUFWLENBQS9CLENBcEJULENBQUE7QUFBQSxNQXNCQSxhQUFBLEdBQWdCLENBQUMsR0FBRyxDQUFDLElBQUosQ0FBUyxPQUFULENBQUEsR0FBb0IsTUFBTSxDQUFDLEtBQVAsQ0FBQSxDQUFjLENBQUMsS0FBcEMsQ0FBQSxHQUE2QyxDQXRCN0QsQ0FBQTtBQUFBLE1BdUJBLFFBQVEsQ0FBQyxJQUFULENBQWMsV0FBZCxFQUE0QixZQUFBLEdBQVksYUFBWixHQUEwQixPQUF0RCxDQXZCQSxDQUFBO0FBQUEsTUF3QkEsR0FBRyxDQUFDLElBQUosQ0FBUyxPQUFULEVBQWtCLE1BQU0sQ0FBQyxLQUFQLENBQUEsQ0FBYyxDQUFDLEtBQWYsR0FBdUIsRUFBekMsQ0F4QkEsQ0FBQTthQXlCQSxHQUFHLENBQUMsSUFBSixDQUFTLFFBQVQsRUFBbUIsTUFBTSxDQUFDLEtBQVAsQ0FBQSxDQUFjLENBQUMsTUFBZixHQUF3QixFQUEzQyxFQTFCMkI7SUFBQSxDQUE3QixFQUR3QjtFQUFBLENBWDFCLEVBRGdCO0FBQUEsQ0FBbEIsQ0FBQSxDQUFBIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3Rocm93IG5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIil9dmFyIGY9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGYuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sZixmLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSIsIiQoZG9jdW1lbnQpLnJlYWR5IC0+XG4gICQoJyNuYW1lJylcbiAgLnR5cGVhaGVhZFxuICAgICAgaGludDogdHJ1ZSxcbiAgICAgIGhpZ2hsaWdodDogdHJ1ZSxcbiAgICAgIG1pbkxlbmd0aDogM1xuICAgICxcbiAgICAgIG5hbWU6ICd0eXBlcycsXG4gICAgICBkaXNwbGF5S2V5OiAndmFsdWUnLFxuICAgICAgc291cmNlOiAocSwgY2IpIC0+XG4gICAgICAgICQuZ2V0ICcvYXBpL3R5cGVMb29rdXAnLCBxdWVyeTogcSwgKGRhdGEpIC0+XG4gICAgICAgICAgY2IgZGF0YS5tYXAgKHgpIC0+IGlkOiB4WzBdLCB2YWx1ZTogeFsxXVxuICAub24gJ3R5cGVhaGVhZDpzZWxlY3RlZCcsIChldmVudCwgZGF0YSkgLT5cbiAgICAkLmdldCBcIi9hcGkvYm9tLyN7ZGF0YS5pZH1cIiwgKGRhdGEpIC0+XG4gICAgICBnID0gbmV3IGRhZ3JlRDMuRGlncmFwaCgpXG5cbiAgICAgIHJlY3VyID0gKHgsIHZpc2l0ZWQpIC0+XG4gICAgICAgIGlmIHZpc2l0ZWQuaW5kZXhPZih4LmlkKSA8IDBcbiAgICAgICAgICB2aXNpdGVkLnB1c2ggeC5pZFxuICAgICAgICAgIGcuYWRkTm9kZSB4LmlkLCBsYWJlbDogeC5sYWJlbFxuICAgICAgICAgIGZvciB5IGluIHgubm9kZXNcbiAgICAgICAgICAgIHJlY3VyIHksIHZpc2l0ZWRcbiAgICAgICAgICAgIGcuYWRkRWRnZSBudWxsLCB5LmlkLCB4LmlkXG4gICAgICByZWN1ciBkYXRhLCBbXVxuXG4gICAgICBzdmcgPSBkMy5zZWxlY3QgJ3N2ZydcbiAgICAgIHN2Z0dyb3VwID0gc3ZnLmFwcGVuZCAnZydcbiAgICAgIGxheW91dCA9IGRhZ3JlRDMubGF5b3V0KClcbiAgICAgICAgLm5vZGVTZXAgMTBcbiAgICAgICAgLmVkZ2VTZXAgMTBcbiAgICAgICAgLnJhbmtTZXAgMTBcbiAgICAgICAgLnJhbmtEaXIgJ1JMJ1xuICAgICAgcmVuZGVyZXIgPSBuZXcgZGFncmVEMy5SZW5kZXJlcigpXG4gICAgICByZW5kZXJlci56b29tIGZhbHNlXG4gICAgICBsYXlvdXQgPSByZW5kZXJlci5sYXlvdXQobGF5b3V0KS5ydW4gZywgZDMuc2VsZWN0ICdzdmcgZydcblxuICAgICAgeENlbnRlck9mZnNldCA9IChzdmcuYXR0cignd2lkdGgnKSAtIGxheW91dC5ncmFwaCgpLndpZHRoKSAvIDJcbiAgICAgIHN2Z0dyb3VwLmF0dHIgJ3RyYW5zZm9ybScsIFwidHJhbnNsYXRlKCN7eENlbnRlck9mZnNldH0sIDIwKVwiXG4gICAgICBzdmcuYXR0ciAnd2lkdGgnLCBsYXlvdXQuZ3JhcGgoKS53aWR0aCArIDQwXG4gICAgICBzdmcuYXR0ciAnaGVpZ2h0JywgbGF5b3V0LmdyYXBoKCkuaGVpZ2h0ICsgNDBcbiJdfQ==
